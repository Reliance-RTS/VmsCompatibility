;;*****************************************************************************
;;
;; Title:       STR$TRIM
;;
;; Type:        Subroutine
;;
;; Description: Emulates the functionality of the OpemVMS routine STR$TRIM
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

;;; <summary>
;;; 
;;; </summary>
;;; <param name="destination"></param>
;;; <param name="source"></param>
;;; <param name="len"></param>
;;; <returns></returns>
function STR$TRIM , ^val
	required out destination	,a
	required in  source			,a
	optional out %ref(len)		,i2
	endparams

	.include "DBLSTARLET:$SSDEF.DBL"
	.include "DBLSTARLET:$STRDEF.DBL"
	.align
	record  
		length		,i4
		destLength	,i4
		srclen,		i4
		lSource		,a65000
	endrecord
proc
	clear length
	srclen = %size(source)
	lSource(1:srclen) = source  

	destLength = ^size(destination)

	if (lSource(1:srclen)) then
	begin
		data ix, i4
		for ix from %trim(lSource(1,srclen)) thru 1 by -1
		begin
			data var,a1
			var = lsource(ix:1)
			if (var && var!=%char(9))
			begin
				length = ix
				exitloop
			end
		end

		if (length) then
			destination = lSource(1:length)
		else
			clear destination
	end
	else
		clear destination
	
	;destination string is truncating returned result
	if (destLength .lt. length)
	begin
		if (^passed(len))		; if length is passed - set to the size of destination string
			len = destLength
		
		freturn STR$_TRU
	end
	
	if (^passed(len))
		len = length

	;If we got here, all is well
	freturn SS$_NORMAL
	
endfunction

