;;*****************************************************************************
;;
;; Title:       STR$FIND_FIRST_NOT_IN_SET
;;
;; Type:        Function
;;
;; Description: Emulates the functionality of the OpemVMS routine STR$FIND_FIRST_NOT_IN_SET
;;
;; Author:      Allan Shikhvarg, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

;;; <summary>
;;;	Searches a string, comparing each character to the characters in a specified set of characters lloking for a non-match
;;; </summary>
;;; <param name="sourceString">String to be tested for given characters</param>
;;; <param name="charactersString">String containg the set of characters</param>
;;; <returns>
;;;	0 - Either all characters in sourceString match some characters in charactersString, or charactersString is empty
;;;	1 - Either the first nonmatching character in sourceString was found in position 1, or  sourceString is empty
;;; n - The first nonmatching character was found in position n within sourceString
;;; </returns>
function STR$FIND_FIRST_NOT_IN_SET, ^val
	required in  sourceString		,a
	required in  charactersString	,a
	endparams
		
	.align
	record lVars
		i			,i4
		sourceLen	,i4
	endrecord

proc
	;there are no characters in the set of characters 
	if (^size(charactersString) .eq. 0)
		freturn 0

	;initialize
	init lVars

	;get length of source string
	sourceLen = ^size(sourceString)

	;the source string is of zero length, so none of the set of characters elements (particularly the first element) can be found
	if (sourceLen .eq. 0)
		freturn 1

	;loop through the source string looking for a match of each character in characters string
	for i from 1 thru sourceLen by 1
	begin
		if (%instr(1, charactersString, sourceString(i:1)) .eq. 0)	;no match - return position of the source string character
			freturn i
	end

	;if we got here, all characters in source string match some characters in set of characters
	freturn 0
endfunction

					
