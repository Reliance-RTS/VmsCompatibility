;;*****************************************************************************
;;
;; Title:       STR$MATCH_WILD 
;;
;; Type:        Function
;;
;; Description: Emulates the functionality of the OpemVMS routine STR$MATCH_WILD 
;;
;; Author:      Allan Shikhvarg, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

;;; <summary>
;;; Compares a pattern string that includes wildcard characters with a candidate string  
;;; </summary>
;;; <param name="candidateString">String that is compared to the pattern string</param>
;;; <param name="patternString">String containing wildcard characters</param>
;;; <returns>
;;;	STR$_MATCH - The candidate string and the pattern string match
;;;	STR$_NOMATCH - The candidate string and the pattern string do not match
;;; </returns>
function STR$MATCH_WILD	,^val
	required in candidateString	,a
	required in patternString   ,a
	endparams

	.include "DBLSTARLET:$STRDEF.DBL"

	.align
	record lVars
		lStatus	,i1		
	endrecord

proc
	init lVars													;initialize

	xcall S_MATCH(patternString, candidateString, lStatus)		;match a string

	if (lStatus .eq. 1) then									;strings match	
		freturn STR$_MATCH
	else														;strings do not match
		freturn STR$_NOMATCH
	freturn 0;remove compiler warning
endfunction

					
