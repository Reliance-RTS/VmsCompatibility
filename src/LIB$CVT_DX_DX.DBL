;;*****************************************************************************
;;
;; Title:       lib$cvt_dx_dx
;;
;; Type:        Function
;;
;; Description: Emulates the functionality of the OpemVMS routine lib$cvt_dx_dx
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2017, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.ifndef SS$_NORMAL
.define SS$_NORMAL 1
.endc

;;; <summary>
;;; 
;;; </summary>
;;; <param name="source"></param>
;;; <param name="destination"></param>
;;; <param name="outlen"></param>
;;; <returns></returns>
function lib$cvt_dx_dx,^val
    required in  mismatch source		,n
    required out  mismatch destination	,n
    required out  ^ref(outlen)			,i2
    record
	    srctyp, i4
	    dsttyp, i4
proc
    if (srctyp = ^datatype(1)) == (dsttyp = ^datatype(2)) then
    begin
		if srctyp == D_TYPE_A then
			^a(destination) = ^a(source)
		else
			destination = source
    end
    else
    begin
		if srctyp == D_TYPE_A then
			destination = ^a(source)
		else
			^a(destination) = source 
    end
    if ^passed(outlen)
		outlen = ^size(destination)
    
	freturn SS$_NORMAL
    
endfunction

