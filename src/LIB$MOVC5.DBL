;;*****************************************************************************
;;
;; Title:       LIB$MOVC5 
;;
;; Type:        Subroutine
;;
;; Description: Emulates the functionality of the OpemVMS routine LIB$MOVC5 
;;
;; Author:      Roger Andrews, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2023, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

;;; <summary>
;;;
;;; </summary>
;;; <param name="srclen"></param>
;;; <param name="srcaddr"></param>
;;; <param name="fillchar"></param>
;;; <param name="dstlen"></param>
;;; <param name="dstaddr"></param>
;;; <returns></returns>
subroutine LIB$MOVC5
	required in ^ref(srclen)            ,i2
	required in ^val(srcaddr)           ,D_ADDR      ;an address
	required in ^ref(fillchar)          ,a1
	required in ^ref(dstlen)            ,i2
	required    ^val(dstaddr)           ,D_ADDR      ;an addres
	record
		hand,	D_HANDLE
		hand1,	D_HANDLE
	structure st
		,a65534
proc							;initialize
	hand1 = %mem_proc(DM_REG,srclen,srcaddr)
	hand = %mem_proc(DM_REG,dstlen,dstaddr)
	^m(hand)  = ^m(hand1)			;move source to the destination as per indicated number of bytes
	if (srclen < dstlen)
		xcall fill(fillchar, ^m(st(srclen+1,dstlen),hand))

	xreturn
	
endsubroutine

					
